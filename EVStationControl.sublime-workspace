{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"lab",
				"lable"
			],
			[
				"in",
				"insert_emi_query"
			],
			[
				"goo",
				"google_map_app"
			],
			[
				"if",
				"info"
			],
			[
				"AC",
				"AC_POWER"
			],
			[
				"dous",
				"doUserStopStart"
			],
			[
				"__",
				"__FILE__"
			],
			[
				"key",
				"keyStart"
			],
			[
				"op",
				"option"
			],
			[
				"Gr",
				"GridScape_ViewGlass_Application_h_"
			],
			[
				"pDo",
				"pDockWdg"
			],
			[
				"set",
				"setWidget"
			],
			[
				"str",
				"strTitle"
			],
			[
				"fla",
				"flags"
			],
			[
				"pa",
				"pXApp"
			],
			[
				"Get",
				"GetApplicationName"
			],
			[
				"is",
				"isEmpty"
			],
			[
				"mainwi",
				"mainwindow"
			],
			[
				"ro",
				"rowCount"
			],
			[
				"W_IS",
				"W_ISFLOAT"
			],
			[
				"QM",
				"QMdiSubWindow"
			],
			[
				"begi",
				"begin"
			],
			[
				"ite",
				"iterator"
			],
			[
				"sed",
				"second"
			],
			[
				"m_",
				"m_strCwdOnStart"
			],
			[
				"o_",
				"o_strAppName"
			],
			[
				"m_st",
				"m_strAppDir"
			],
			[
				"NO",
				"ERR_NOERROR"
			],
			[
				"cp",
				"cp_Argv"
			],
			[
				"setFl",
				"setFlags"
			],
			[
				"dock",
				"dockWidgetArea"
			],
			[
				"addco",
				"addDockWidget"
			],
			[
				"flag",
				"flagsMask"
			],
			[
				"p_wdg",
				"p_wdgDockWind"
			],
			[
				"W_S",
				"W_ISDOCKED"
			],
			[
				"che",
				"setCheckState"
			],
			[
				"Add",
				"AddTableRows"
			],
			[
				"child",
				"childGroups"
			],
			[
				"ask",
				"askAgain"
			],
			[
				"action",
				"actionDeleteLayout"
			],
			[
				"lay",
				"layoutName"
			],
			[
				"for",
				"Format"
			],
			[
				"get",
				"GetPtr"
			],
			[
				"comp",
				"compName"
			],
			[
				"cc",
				"cclib"
			],
			[
				"info",
				"CCLIB_LOG_INFO"
			],
			[
				"so",
				"socRecord"
			],
			[
				"loa",
				"loadPower"
			],
			[
				"sol",
				"solarPower"
			],
			[
				"current",
				"currentSOC"
			],
			[
				"sys",
				"system_clock"
			],
			[
				"charge",
				"chargeFromSolar"
			],
			[
				"_",
				"_app"
			],
			[
				"of",
				"offset"
			],
			[
				"time",
				"time_point"
			],
			[
				"dou",
				"doUserStart"
			],
			[
				"use",
				"doUserStop"
			],
			[
				"de",
				"debug"
			],
			[
				"inc",
				"inc\t#include \"â€¦\""
			],
			[
				"Pro",
				"ProfileFactory"
			],
			[
				"val",
				"value"
			],
			[
				"sy",
				"symbol"
			],
			[
				"name",
				"namespace"
			],
			[
				"to",
				"to_string"
			],
			[
				"slot",
				"slotStart_t"
			],
			[
				"slo",
				"slotStart_t"
			],
			[
				"rea",
				"reader"
			],
			[
				"_st",
				"_stop"
			],
			[
				"em",
				"emDataPoints"
			],
			[
				"ve",
				"vecA"
			],
			[
				"Json",
				"JsonHelper"
			],
			[
				"no",
				"now_t"
			],
			[
				"Js",
				"JsonHelper"
			],
			[
				"sl",
				"sleep_for"
			],
			[
				"Qu",
				"Query"
			],
			[
				"value",
				"VALUES"
			],
			[
				"end",
				"endTime"
			],
			[
				"now",
				"now_tm"
			],
			[
				"In",
				"InsertMod"
			],
			[
				"bs",
				"bmssql"
			],
			[
				"SQ",
				"SQLITE_OK"
			],
			[
				"ex",
				"debugExt"
			],
			[
				"log",
				"logger"
			],
			[
				"debug",
				"debugExt"
			],
			[
				"sqlite3_",
				"sqlite3_busy_timeout"
			],
			[
				"uni",
				"unique_ptr"
			],
			[
				"load",
				"loadMeter"
			],
			[
				"getL",
				"getLastCumulative_kwhUsingSQLite"
			],
			[
				"getLast",
				"getLastCumulative_kwhUsingPoco"
			],
			[
				"last",
				"_lastCumulative_kwh"
			],
			[
				"ls",
				"_lastCumulative_kwh"
			],
			[
				"Modbus",
				"ModbusTCP"
			],
			[
				"temp",
				"tempD"
			],
			[
				"CMAKE_CURR",
				"CMAKE_CURRENT_SOURCE_DIR"
			],
			[
				"CMAKE_MI",
				"CMAKE_MINIMUM_REQUIRED_VERSION"
			],
			[
				"TARGE",
				"TARGET"
			],
			[
				"PUBLIC",
				"PUBLIC_HEADER"
			],
			[
				"GLO",
				"GLOB_RECURSE"
			],
			[
				"CM",
				"CMAKE_COMMAND"
			],
			[
				"COMMA",
				"COMMAND"
			],
			[
				"er",
				"error"
			],
			[
				"arg",
				"argc"
			],
			[
				"PO",
				"POWER_THRESOLD"
			],
			[
				"po",
				"powerValue"
			],
			[
				"en",
				"energy"
			],
			[
				"thre",
				"threadFunc"
			],
			[
				"vec",
				"vecAA"
			],
			[
				"co",
				"connection_"
			],
			[
				"on",
				"online_"
			],
			[
				"run",
				"runtime_error"
			],
			[
				"Web",
				"WebSocketClient"
			],
			[
				"sig",
				"sigintt"
			],
			[
				"this",
				"this_thread"
			],
			[
				"send",
				"sender"
			],
			[
				"db",
				"dbl_"
			],
			[
				"mess",
				"messageStr"
			],
			[
				"row",
				"row-activated"
			],
			[
				"csv",
				"csvfile"
			],
			[
				"numb",
				"numbers"
			],
			[
				"sqlite3",
				"sqlite3_column_type"
			],
			[
				"Dat",
				"Database"
			],
			[
				"by",
				"busyTime"
			],
			[
				"Modbu",
				"ModbusTCP"
			],
			[
				"inv",
				"inverter"
			],
			[
				"e",
				"eScope"
			],
			[
				"commands",
				"COMMAND_SUCCESS"
			],
			[
				"commandf",
				"COMMAND_FAIL"
			],
			[
				"debu",
				"debugExt"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 92.0,
		"last_filter": "form",
		"selected_items":
		[
			[
				"form",
				"Clang Format: Format Selection"
			],
			[
				"isnta",
				"Package Control: Install Package"
			],
			[
				"clam",
				"Clang Format: Select Style"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: List Packages"
			],
			[
				"cla",
				"Package Control: List Packages"
			],
			[
				"clang",
				"Package Control: Enable Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"vme",
				"View: Toggle Menu"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"auto",
				"User: Python PEP8 Autoformat"
			],
			[
				"forma",
				"PyYapf: Format Selection"
			],
			[
				"insat",
				"Build With: Python - Syntax Check"
			],
			[
				"pak",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/mnt/ROS/EVStationControl"
	],
	"file_history":
	[
		"/tmp/example_builder.ui",
		"/usr/share/doc/libgtkmm-3.0-doc/examples/gtk-demo/example_builder.ui.gz",
		"/mnt/ROS/catkin_ws/src/beginner_tutorials/src/gtkUI.cpp",
		"/mnt/ROS/catkin_ws/src/beginner_tutorials/src/talker.cpp",
		"/tmp/image.gresource.xml",
		"/tmp/pleasewait.cpp",
		"/tmp/CMakeLists.txt",
		"/mnt/ROS/catkin_ws/src/beginner_tutorials/src/listner.cpp",
		"/mnt/ROS/catkin_ws/src/beginner_tutorials/CMakeLists.txt",
		"/mnt/temp/OpenSceneGraph/src/osgPlugins/curl/CMakeLists.txt",
		"/home/manthan/.config/sublime-text-3/Packages/User/clang_format_custom.sublime-settings",
		"/mnt/temp/OpenSceneGraph/CMakeLists.txt",
		"/home/manthan/.config/sublime-text-3/Packages/User/clang_format.sublime-settings",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/google_map_gui.ui",
		"/mnt/ROS/catkin_ws/src/beginner_tutorials/talker.cpp",
		"/tmp/config.xml",
		"/tmp/a.cpp",
		"/mnt/temp/google-app/test1/app.yaml",
		"/mnt/temp/google-app/test1/main.py",
		"/mnt/temp/google-app/test1/mail_template.html",
		"/mnt/temp/google-app/test1/emailsender.py",
		"/mnt/temp/google-app/test1/review.py",
		"/mnt/temp/google-app/python-gae-quickstart/app.yaml",
		"/mnt/temp/google-app/python-gae-quickstart/main.py",
		"/tmp/a/a.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/google_map/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/applications/xapp/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/ethernet/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/scripts/nova_utils.cmake",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/qjson/src/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/qjson/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/google_map/CMakeLists.txt",
		"/tmp/b.log",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/CMakeLists.txt",
		"/tmp/test.cpp",
		"/tmp/a.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/CMakeLists.txt",
		"/tmp/a.bash",
		"/tmp/a.csv",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/install/bin/a.log",
		"/tmp/CMakeList.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/google_map/google_map/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/google_map_gui.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/google_map/google_map/google_map_gui.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/google_map/google_map/qjson/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/google_map/google_map/google_map_gui.ui",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/google_map_gui.h",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/google_map/google_map/google_map_gui.h",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/google_map/build/a.log",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/services/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/services/xapplication/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/services/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/svn_sdk/LINUX64/qt/5.7/lib/cmake/Qt5Gui/Qt5GuiConfig.cmake",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_map/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_map/qjson/tests/cmdline_tester/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/video_stream_generator/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/qjson/tests/cmdline_tester/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/vector_can_device/main.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/libs/runtime/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/vector_can_device/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/vector_can_device/vector_can_component.h",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/vector_can_device/vector_can_device.h",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/vector_can_device/vxlapi.h",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_mapnew/google_map.h",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_map/google_map_gui.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/src/components/google_map/google_map_gui.h",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/google_map/main.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/google_map/mainwindow.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/libs/sdk/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/libs/sdk/tester_pin.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/google_map/testMap.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6183/nova/test/components/google_map/mainwindow.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_pin.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_properties.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_dynamicpin.h",
		"/tmp/b.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/runtime/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/runtime/tester_runtime.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/gtest/tester_pinmetadata.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/gtest/main.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/main.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_datasample.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_properties.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/tfileformat/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/tfileformat/tester_logfile.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/component/tester_component.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_pin.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_dynamicpin.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/tfileformat/main.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/tfileformat/callbacks.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/tfileformat/callbacks.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/tfileformat/tester_logfile.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/include/tFileFormat.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/src/libs/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/projectloader/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/component/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/scripts/nova_utils.cmake",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/tester_datasample.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/sdk/gtest/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/runtime/tester_runtime.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/install/include/base/include/Error.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/src/libs/runtime/runtime.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/component/main.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/include/IClassFactory.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/install/external/cclib/include/aObject.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/include/IClock.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/include/IService.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/install/include/runtime/runtime.h",
		"/usr/include/gtest/gtest.h",
		"/usr/include/gtest/internal/gtest-internal.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/projectloader/tester_projectloader.h",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/projectloader/tester_projectloader.cpp",
		"/tmp/gtest/CMakeLists.txt",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/projectloader/main.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/libs/component/tester_component.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/src/libs/sdk/pin.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6445/nova/test/CMakeLists.txt",
		"/tmp/gtest/gtest/GTestConfig.cmake",
		"/tmp/gtest/a.cpp",
		"/media/sf_I_DRIVE/Work/2017/april/6449/nova/include/IComponent.h",
		"/media/sf_I_DRIVE/Work/2017/april/6449/nova/include/IPin.h"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"/mnt/hdd1/work/microgridcontroller/GridScape/Database/sqlite3"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"curl",
			"WithOpenCV",
			"libexec",
			"/esources",
			"/resources",
			"/home/tweidenmueller/svn_sdk/src/qt/5.7/install/resources",
			"Qt WebEngine",
			"webengin",
			"install",
			"find_",
			"QJSON_BUILD_TESTS",
			"find_",
			"WebKitWidgets",
			"Qt5WebKitWidgets",
			"CPPUNIT_ASSERT",
			"_fabs",
			"CPPUNIT_ASSERT",
			"PinConnection",
			"CPPUNIT_ASSERT",
			"ComponentConnections",
			"PinConnectionEnumStaticPins",
			"PinCreation",
			"PinCreateNewStaticPin",
			"PinConnectionEnumStaticPins",
			"CPPUNIT_ASSERT",
			"tUInt8",
			"CPPUNIT_ASSERT",
			"GTEST_TEST_BOOLEAN_",
			"CPPUNIT_ASSERT",
			"CLOCK",
			"CPPUNIT_ASSERT",
			"io_mutex",
			"threadpool",
			"gtest",
			"WITH_QTKIT",
			"qt",
			"watch_skills",
			"load_watch_skills",
			"matr",
			"cach",
			"cat",
			"tran",
			"auto",
			"m_fLoadPower",
			"m_uIntACExportPower",
			"addDeviceInfo",
			"message",
			"m_uIntACExportPower",
			"getACPortMode",
			"addJustProfile",
			"doProfileAdjustment",
			"addJustSlot",
			"m_bIsUserStopStartRequired",
			"doUserStopStart",
			"m_uIntACExportPower",
			"currslot",
			"slot",
			"m_fACExportPower",
			"isUserStopStartRequired",
			"batteryState",
			"isSolarImport",
			"_profile",
			"GridScape_MicroGrid_inc_NormalProfile_h_",
			"doProfileAdjustment",
			"_profile",
			"uInt16ModbusReg",
			"uPtrModbusRtuInv",
			"regReading",
			"modbusSlave",
			"modbusSlave_",
			"connectModbusSlave",
			"EnergyData",
			"Form",
			"GooglMapGui",
			"Form",
			"OID_NOVA_DISPLAYVIEWER",
			"DISPLAYVIEWer",
			"cDisplayViewer",
			"cGoogleMap",
			"include_directories",
			"ALLOW_DOWNLOADS",
			"downlo",
			"get",
			"cross",
			"LLVM_ALL_TARGETS",
			"X86",
			"LLVM_ALL_TARGETS",
			"LLVM_TARGETS_TO_BUILD",
			"target",
			"nCycles",
			"m_nCycleTime",
			"m_pRunnable",
			"nCycleTime",
			"m_nCycleTime",
			"_pRunnable->m",
			"m_bIsRunning",
			"m_bExec",
			"m_pRunnable->m_",
			"m_pRunnable->",
			"m_bExec",
			"strId",
			"_status",
			"OID_NOVA_CONTROL",
			"m_resource",
			"m_endpoint",
			"hdl",
			"connection_hdl",
			"uri",
			"message_handler",
			"open_handler",
			"BUILD_EXAMPLES",
			"RegisterService",
			"RegisterAllServices",
			"ParseDocument",
			"ParseServices",
			"FromStringToRunLevel",
			"ParseServices",
			"FromStringToRunLevel",
			"ResolveSymbol",
			"CMAKE_INSTALL",
			"hasfocus",
			"key",
			"event",
			"remove",
			"AddMdiSubWindow",
			"AddDockWidget",
			"\n   ",
			"AddMdiSubWindow"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"WebEngineWidgets",
			"Qt5WebEngineWidgets",
			"ASSERT_TRUE",
			"m_sIntACExportPower",
			"currSlot",
			"m_bIsUserStopStartRequired",
			"m_uInt16ModbusReg",
			"m_uPtrModbusRtuInv",
			"uInt16ModbusReg",
			"uPtrModbusRtuInv",
			"cGoogleMapGui",
			"GoogleMapGui",
			"cGooglMapGui",
			"OID_NOVA_GOOGLEMAP",
			"GOOGLE_MAP",
			"cGoogleMap",
			"",
			"m_",
			"",
			"_deviceStatus",
			"std::map<QString, NovaExternalWindow*>",
			"RemoveFromList",
			"FindFromList",
			"QDockWidget",
			"QDcokWidget",
			"p_dlgAllWindow->",
			"o_ExternalState",
			"o_DockState",
			"o_FloatState",
			"m_strXAppName",
			"QTreeWidgetItem",
			"CustomQTreeWidgetItem",
			"pObjectInfo",
			"pIcomponent",
			"nRet",
			"\",\n\"",
			"\";\n\"",
			"tester_cApp",
			"nDiff",
			"o_List",
			"p_tblAllWindow",
			"p_tblWdgItem",
			"o_layAllWindow",
			"o_dlgAllWindow",
			"o_tblAllWindow",
			"NovaExternalWindow",
			"ExternalWindow",
			"nLastAcivityTimeStamp",
			"nCreateTimeStamp",
			"nSampleCount",
			"nTotalData",
			"pQTreeWItemComp",
			"oPinMap",
			"pQTreeWItemPin",
			"i_nMinorType",
			"i_nSampleSize",
			"i_strPinName",
			"i_strCompName",
			"cPinStatistics",
			"oObjectList",
			"tComponentMap",
			"DataGenerator",
			"LoadFollowingProfileV2",
			"lastUserStopStartCheckTime_",
			"ProfileFactory",
			"OrionDummyBMS",
			"LoadFollowingProfile",
			"_profile",
			"StandardProfile",
			"websocketpp::log::alevel::app",
			"websocketpp::log::alevel::devel",
			"solar",
			"grid",
			"load",
			"_deviceStatus",
			"EnergyMeterFactory",
			"AbstractEnergyMeter",
			"_deviceStatus",
			"AbstactEnergyMeter",
			"_deviceStatus",
			"DeviceHandler",
			"",
			"meter",
			"station",
			"multiSlave",
			"ModbusRTUFactory",
			"JsonHelper",
			"Grid",
			"Solar",
			"\\\\\"",
			"\\\"",
			"\"\\",
			"",
			"OrionBMS",
			"port1",
			"AccuEnergyDC",
			"TrinityAC",
			"",
			"// debugExt",
			"-- ",
			"config()",
			"logger()",
			"",
			"ModbusBase",
			"] = ",
			"row[columns.",
			");",
			"add(",
			"columns",
			"address",
			"name",
			"treeView",
			"refTreeModel",
			"buttonQuit",
			"buttonBox",
			"vBox",
			"scrolledWindow",
			"",
			"client_",
			"Client",
			"",
			"Samsung",
			"ModbusTCP"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/xapp.sublime-build",
	"project": "EVStationControl.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 501.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 381.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 280.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
